Class Structure:
================

Main Class:
    LuftrauserGame - class
Objects:
    IEntity - interface
        ~ implemented by all objects that change state
    AShootingEntity - Abstract class implements IEntity
    AAirplane -Abstract Class extends AShootingEntity 
    UserAirplane -class extends AAirplane
    EnemyAirplane -class extends AAirplane
        ~has an IAirplaneAI to determine actions
    AShip -Abstract Class extends AShootingEntity
	~has an IShipAI to determine actions
    SmallShip -class extends AShip
    MediumShip -class extends AShip
    LargeShip -class extends AShip
    Projectile -class implements IEntity
AI's:
    IAirplaneAI -interface
    AirplaneAIWeak -class implements IAirplaneAI
    AirplaneAIMedium -class implements IAirplaneAI
    AirplaneAIStrong -class implements IAirplaneAI
    IShipAI -interface
    ShipAIWeak -class implements IShipAI
    ShipAIMedium -class implements IShipAI
    ShipAIStrong -class implements IShipAI
StateManagers:
    IGameTickHandlerEntityView -interface
        ~hides methods of GameTickHandler that entity's should not have access tof
    GameTickHandler -class
        ~updates all locations, etc.
    CollissionHandler -class
        ~checks for any collissions
    KeyInputHandler -class
        ~checks for any user input
Graphics:
    Assets -class
        ~loads images used in the game
    GraphicsManager -class
        ~handles drawing all entities, backgrounds, etc
Other Classes:
    other?
